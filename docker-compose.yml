# docker-compose file used to deploy assosuite in a prodution environment
#   TODO: add traefik, networks management
version: '3.8'

services:

  proxy:
    image: traefik:v2.2
    restart: always
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --api.debug=true
      - --providers.docker.network=assos-network-web
      - --entrypoints.assosuite-web.address=:80
      - --entrypoints.assosuite-web-secured.address=:443
      - --providers.file.filename=/dynamic.yaml
      - --certificatesresolvers.assosuite-challenge.acme.tlschallenge=true
      - --certificatesresolvers.assosuite-challenge.acme.email=tolstoyfafa@gmail.com
      - --certificatesresolvers.assosuite-challenge.acme.storage=/letsencrypt/acme.json
    ports:
      -  80:80
      -  8080:8080
      -  443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/letsencrypt:/letsencrypt
      - ./config/dynamic.yaml:/dynamic.yaml
    networks:
      - assos-network-web

  backend:
    image: "docker.pkg.github.com/tolstoyfafa/assos_suite/assos-backend:${APP_VERSION}"
    restart: always
    depends_on: 
      - mongo
    labels:
      - "traefik.http.routers.assos-back-router.rule=Host(`${BACKEND_DN}`)"
      - "traefik.http.routers.assos-back-entrypoint.entrypoints=assosuite-web"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.back-mid.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.back-mid.headers.accesscontrolalloworiginlist=http://${FRONTEND_DN}" 
      - "traefik.http.routers.assos-back-secured.rule=Host(`${BACKEND_DN}`)"
      - "traefik.http.routers.assos-back-secured.entrypoints=assosuite-web-secured"
      - "traefik.http.routers.assos-back-secured.tls.certresolver=assosuite-challenge"

    networks:
      - assos-network-web
      - backend-network

  frontend:
    image: "docker.pkg.github.com/tolstoyfafa/assos_suite/assos-frontend:${APP_VERSION}"
    restart: always
    depends_on:
      - backend
    labels:
        - "traefik.http.routers.assos-front-router.rule=Host(`${FRONTEND_DN}`)" 
        - "traefik.http.routers.assos-front-entrypoint.entrypoints=assosuite-web"
        - "traefik.http.routers.assos-front-secured.rule=Host(`${FRONTEND_DN}`)"
        - "traefik.http.routers.assos-front-secured.entrypoints=assosuite-web-secured"
        - "traefik.http.routers.assos-front-secured.tls.certresolver=assosuite-challenge"

    networks:
        - assos-network-web
    environment:
        - API_URL=${ENV_API_URL}
        - API_PORT=${ENV_API_PORT}
    
  mongo:
    image: mongo
    restart: always
    networks:
      - backend-network

networks:
  assos-network-web:
    internal: false
  backend-network:
    internal: true
